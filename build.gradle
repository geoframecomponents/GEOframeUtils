// include the BinTray repository
plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = "com.github.geoframecomponents"
archivesBaseName = "GEOframeUtils"

def projectName = "GEOframeUtils"
def projectDescription = "Utilities for GEOframe developers"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = '1.8'

// to get project version from command line, just type
// $ gradle -PprojVersion=<version_number> build
// default is na
if (project.hasProperty('projVersion')) {
      project.version = project.projVersion
} else {
      project.version = 'na'
}

// name with versioning of the jar file
jar {
    baseName = projectName
    manifest {
        attributes 'Implementation-Title' : projectName,
                   'Implementation-Version': version
    }
}

repositories {

    maven {
        // jai_core 1.1.3
        // jai_codec 1.1.3
        url 'http://download.osgeo.org/webdav/geotools/'
    }

    maven {
        // hatbox 1.0.b7
        url 'http://maven.geo-solutions.it/'
    }

    // jgt-jgrassgears
    // jgt-oms3
    // jcip-annotations
    // commons-lang3
    mavenCentral()

    // local jar files
    flatDir {
        dirs 'lib'
    }
}

dependencies {

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    compile group: 'net.jcip', name: 'jcip-annotations', version: '1.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'javax.media', name: 'jai_core', version: '1.1.3'
    compile group: 'javax.media', name: 'jai_codec', version: '1.1.3'
    compile group: 'org.jgrasstools', name: 'jgt-jgrassgears', version: '0.7.8'
    compile group: 'org.jgrasstools', name: 'jgt-oms3', version: '0.7.8'
    compile group: 'net.sourceforge.hatbox', name: 'hatbox', version: '1.0.b7'

    testCompile group: 'junit', name: 'junit', version: '4.10'

}

// bintray sync
if (hasProperty('bintrayUsername') ||
    System.getenv().containsKey('BINTRAY_USER')) {
    // Used by the bintray plugin
    bintray {
        user = System.getenv().getOrDefault('BINTRAY_USER', bintrayUsername)
        key = System.getenv().getOrDefault('BINTRAY_KEY', bintrayApiKey)
        configurations = ['deployables']
        publish = true
        override = true // [Default: false] Whether to override version
                        // artifacts already published

        //Package configuration. The plugin will use the repo and name
        //properties to check if the package already exists. In that case,
        //there's no need to configure the other package properties (like
        //userOrg, desc, etc).
        pkg {
            repo = 'maven'
            name = projectName
            desc = projectDescription
            websiteUrl = 'https://geoframe.blogspot.it'
            issueTrackerUrl = 'https://github.com/geoframecomponents/GEOframeUtils/issues'
            vcsUrl = 'https://github.com/geoframecomponents/GEOframeUtils.git'
            licenses = ['GPL-3.0']
            publicDownloadNumbers = true

            githubRepo = 'geoframecomponents/GEOframeUtils'
            githubReleaseNotesFile = 'ReadMe.rst'

            version {
                name = project.version
                // desc = Optional - Version-specific description
                released = new Date()

                // Configuration for GPG signing
                gpg {
                    sign = true
                    passphrase = System.getenv().getOrDefault('PASSPHRASE', bintrayPassphrase)
                }

                // Configuration for Maven Central sync of the version
                mavenCentralSync {
                    sync = true // Determines whether to sync the version to Maven Central
                    user = System.getenv().getOrDefault('SONATYPE_USER', nexusUsername)
                    password = System.getenv().getOrDefault('SONATYPE_PASSWORD', nexusPassword)
                }
            }
        }

    }
}
